{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_DONATION, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  donations: []\n}, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state,\n        isLoading: true\n      };\n\n    case 'END_LOADING':\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        donations: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n    case FETCH_BY_CREATOR:\n      return { ...state,\n        donations: action.payload.data\n      };\n\n    case FETCH_DONATION:\n      return { ...state,\n        donation: action.payload.donation\n      };\n\n    case LIKE:\n      return { ...state,\n        donations: state.donations.map(donation => donation._id === action.payload._id ? action.payload : donation)\n      };\n\n    case COMMENT:\n      return { ...state,\n        donations: state.donations.map(donation => {\n          if (donation._id === +action.payload._id) {\n            return action.payload;\n          }\n\n          return donation;\n        })\n      };\n\n    case CREATE:\n      return { ...state,\n        donations: [...state.donations, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        donations: state.donations.map(donation => donation._id === action.payload._id ? action.payload : donation)\n      };\n\n    case DELETE:\n      return { ...state,\n        donations: state.donations.filter(donation => donation._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Kierstyn/Documents/Classes/Fall 2021/CS 458 - Software Engineering/FinalGrub/client/src/reducers/donations.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_BY_CREATOR","FETCH_DONATION","CREATE","UPDATE","DELETE","LIKE","COMMENT","state","isLoading","donations","action","type","payload","data","currentPage","numberOfPages","donation","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,gBAArC,EAAuDC,cAAvD,EAAuEC,MAAvE,EAA+EC,MAA/E,EAAuFC,MAAvF,EAA+FC,IAA/F,EAAqGC,OAArG,QAAoH,0BAApH;AAEA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,SAAS,EAAE;AAA9B,CAAT,EAA6CC,MAA7C,KAAwD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGD,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKV,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELE,QAAAA,SAAS,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFrB;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKhB,eAAL;AACA,SAAKC,gBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,SAAS,EAAEC,MAAM,CAACE,OAAP,CAAeC;AAAtC,OAAP;;AACF,SAAKZ,cAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYS,QAAAA,QAAQ,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAArC,OAAP;;AACF,SAAKX,IAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYE,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAAN,CAAgBQ,GAAhB,CAAqBD,QAAD,IAAeA,QAAQ,CAACE,GAAT,KAAiBR,MAAM,CAACE,OAAP,CAAeM,GAAhC,GAAsCR,MAAM,CAACE,OAA7C,GAAuDI,QAA1F;AAAvB,OAAP;;AACF,SAAKV,OAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELE,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAAN,CAAgBQ,GAAhB,CAAqBD,QAAD,IAAc;AAC3C,cAAIA,QAAQ,CAACE,GAAT,KAAiB,CAACR,MAAM,CAACE,OAAP,CAAeM,GAArC,EAA0C;AACxC,mBAAOR,MAAM,CAACE,OAAd;AACD;;AACD,iBAAOI,QAAP;AACD,SALU;AAFN,OAAP;;AASF,SAAKd,MAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,SAAS,EAAE,CAAC,GAAGF,KAAK,CAACE,SAAV,EAAqBC,MAAM,CAACE,OAA5B;AAAvB,OAAP;;AACF,SAAKT,MAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAAN,CAAgBQ,GAAhB,CAAqBD,QAAD,IAAeA,QAAQ,CAACE,GAAT,KAAiBR,MAAM,CAACE,OAAP,CAAeM,GAAhC,GAAsCR,MAAM,CAACE,OAA7C,GAAuDI,QAA1F;AAAvB,OAAP;;AACF,SAAKZ,MAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAAN,CAAgBU,MAAhB,CAAwBH,QAAD,IAAcA,QAAQ,CAACE,GAAT,KAAiBR,MAAM,CAACE,OAA7D;AAAvB,OAAP;;AACF;AACE,aAAOL,KAAP;AApCJ;AAsCD,CAvCD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_DONATION, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\r\n\r\nexport default (state = { isLoading: true, donations: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'START_LOADING':\r\n      return { ...state, isLoading: true };\r\n    case 'END_LOADING':\r\n      return { ...state, isLoading: false };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        donations: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n    case FETCH_BY_SEARCH:\r\n    case FETCH_BY_CREATOR:\r\n      return { ...state, donations: action.payload.data };\r\n    case FETCH_DONATION:\r\n      return { ...state, donation: action.payload.donation };\r\n    case LIKE:\r\n      return { ...state, donations: state.donations.map((donation) => (donation._id === action.payload._id ? action.payload : donation)) };\r\n    case COMMENT:\r\n      return {\r\n        ...state,\r\n        donations: state.donations.map((donation) => {\r\n          if (donation._id === +action.payload._id) {\r\n            return action.payload;\r\n          }\r\n          return donation;\r\n        }),\r\n      };\r\n    case CREATE:\r\n      return { ...state, donations: [...state.donations, action.payload] };\r\n    case UPDATE:\r\n      return { ...state, donations: state.donations.map((donation) => (donation._id === action.payload._id ? action.payload : donation)) };\r\n    case DELETE:\r\n      return { ...state, donations: state.donations.filter((donation) => donation._id !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}